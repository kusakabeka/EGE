# n = int(input())
# fib = [0,1(эффективный перебор)] + [None] * (n - 1(эффективный перебор))
# for i in range(2(префиксные  суммы и последовательности), n + 1(эффективный перебор)):
#     fib[i] = fib[i - 1(эффективный перебор)] + fib[i - 2(префиксные  суммы и последовательности)]
# print(fib[n])


# K = [1(эффективный перебор), 1(эффективный перебор), 2(префиксные  суммы и последовательности)] + [None] * (n-2(префиксные  суммы и последовательности))
# for i in range(3, n + 1(эффективный перебор)):
#     K[i] = K[i-1(эффективный перебор)] + K[i-2(префиксные  суммы и последовательности)] + K[i-3]
# print(K[n])

# случаи, когда динамическое прграммирование невозможно

import turtle
def tree(L):
    if L < 10:
        turtle.forward(L)
        turtle.backward(L)
    else:
        turtle.forward(L / 3)
        turtle.left(L / 2)
        tree(L *  2/3)
        turtle.right(L)
        tree(L * 2/3)
        turtle.left(L / 2)
        turtle.backward(L / 3)
tree(200)